
@using BankAccountMgmt.ViewModels
@using BankAccountMgmt.Controllers
@model PaginatedList<ClientAccountVM>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h1>Account Summary</h1>

@if (@ViewBag.Message != null)
{
    <div class="alert alert-success">@ViewBag.Message</div>
}
<p>
    <a asp-action="Create">Add New Bank Account</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <div class="form-group" style="display: inline-block">
                <span>Search on AccountType:</span>
                <input type="text" name="SearchString"
                       value="@ViewData["currentFilter"]" required />
            </div>
            <div class="form-group" style="display: inline-block">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["accountNumSortParm"]">
                    Account Number
                </a>
            </th>
            <th>
               FirstName
            </th>
            <th>
              LastName
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["accountTypeSortParm"]">
                    Account Type
                </a>
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.AccountNum)
                </td>
                <td>
                    @Html.DisplayFor(model => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(model => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(model => item.AccountType)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AccountNum">Edit</a> |
                    <a asp-action="Details" asp-route-num="@item.AccountNum">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.AccountNum">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>



